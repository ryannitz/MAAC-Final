<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>119</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_path</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>8</kind>
            <path>path1</path>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//collision check for player 

obj = obj_player;
level[0] = obj.maryJ_level;
level[1] = obj.cocaine_level;
level[2] = obj.heroin_level;
level[3] = obj.acid_level;

active[0] = obj.maryJ_isActive;
active[1] = obj.cocaine_isActive;
active[2] = obj.heroin_isActive;
active[3] = obj.acid_isActive;

showing[0] = obj.maryJ_isShown;
showing[1] = obj.cocaine_isShown;
showing[2] = obj.heroin_isShown;
showing[3] = obj.acid_isShown;

var length = 4;

if(collision_circle(x, y-8, 175, obj, false, false)){
    isCollide = true;
    var arrested = false;
    
    for(p = 0; p &lt; 4; p++){
        //if(level[p] &gt; 75 || active[p] == true || street_credit &gt; 25){
            //arrested
        //}
    
    
        if(level[p] &gt; 75){
            show_debug_message("Arrested for drug use");
        }else if(active[p] == true){
            show_debug_message("Arrested for under the influence in public");
        }else if(obj.street_credit &gt; 25){
            show_debug_message("Arrested for known drug affiliation");
        }
    }
    
}else{
    isCollide = false;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.5);

if(isCollide){
   draw_set_colour(c_yellow);
}else{
    draw_set_color(c_red);
}

draw_circle(x,y-8,175,false);
draw_set_alpha(1);

if(direction == 0){
    //going right
    draw_sprite(spr_policeCar, 0, x, y);
    
}else if(direction == 90){
    //going up
    draw_sprite(spr_policeCarVer, 0, x, y);
    
}else if(direction == 180){
    //going left
    draw_sprite(spr_policeCar, 1, x, y);
    
}else if(direction == 270){
    //going down
    draw_sprite(spr_policeCarVer, 1, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
